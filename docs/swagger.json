{
    "swagger": "2.0",
    "info": {
        "description": "This is a comprehensive API for the EasyCourt system.",
        "title": "EasyCourt API",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/bookings": {
            "get": {
                "description": "Retrieves all bookings with pagination support",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Get all bookings",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of bookings to retrieve",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset of bookings",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.ReadBooking"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new booking based on the provided payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Create a new booking",
                "parameters": [
                    {
                        "description": "Booking Data",
                        "name": "booking",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.CreateBooking"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.Booking"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/bookings/reset": {
            "delete": {
                "description": "Delete all the bookings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Delete all the bookings",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/bookings/{id}": {
            "get": {
                "description": "Retrieves a specific booking by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Get booking by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Booking ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.Booking"
                        }
                    },
                    "404": {
                        "description": "Booking not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing booking based on the provided payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Update a booking",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Booking ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Booking Data",
                        "name": "booking",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.CreateBooking"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.Booking"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Booking not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a booking by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Delete a booking",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Booking ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Booking not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/courts": {
            "get": {
                "description": "Retrieves all courts",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "court"
                ],
                "summary": "Get all courts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.Court"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to fetch courts",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates the data of an existing court",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "court"
                ],
                "summary": "Update an existing court",
                "parameters": [
                    {
                        "description": "Court data",
                        "name": "court",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.Court"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to update court",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new court with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "court"
                ],
                "summary": "Create a new court",
                "parameters": [
                    {
                        "description": "Court data",
                        "name": "court",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.Court"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to create court",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/courts/by-location": {
            "get": {
                "description": "Retrieves all the courts from a location.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "court"
                ],
                "summary": "Get courts by location ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the location",
                        "name": "location_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Court information",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.Court"
                            }
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/courts/{id}": {
            "get": {
                "description": "Retrieves a court by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "court"
                ],
                "summary": "Get court by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Court ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.Court"
                        }
                    },
                    "400": {
                        "description": "Invalid court ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Court not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a court based on the given ID",
                "tags": [
                    "court"
                ],
                "summary": "Delete a court by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Court ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid court ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to delete court",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/location": {
            "get": {
                "description": "Get a list of all locations",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "location"
                ],
                "summary": "Get all locations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.Location"
                            }
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the details of a location",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "location"
                ],
                "summary": "Update a location",
                "parameters": [
                    {
                        "description": "Updated location data",
                        "name": "location",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.Location"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.APIError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new location with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "location"
                ],
                "summary": "Create a new location",
                "parameters": [
                    {
                        "description": "Location data",
                        "name": "location",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.CreateLocation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.Location"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.APIError"
                        }
                    }
                }
            }
        },
        "/location/{id}": {
            "delete": {
                "description": "Delete a location by its ID",
                "tags": [
                    "location"
                ],
                "summary": "Delete a location by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Location ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.APIError"
                        }
                    }
                }
            }
        },
        "/location/{id}/image": {
            "post": {
                "description": "Upload an image file for a specific location and store it in S3",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "location"
                ],
                "summary": "Upload a location image",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Location ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Image file to upload",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a success message and the URL of the uploaded image",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.APIError"
                        }
                    },
                    "404": {
                        "description": "Location not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.APIError"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Authenticate a user and return access and refresh tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login Credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handler.Credentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.APIError"
                        }
                    }
                }
            }
        },
        "/refresh": {
            "post": {
                "description": "Use a refresh token to obtain a new access token and refresh token pair",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Refresh access token",
                "parameters": [
                    {
                        "description": "Refresh Token",
                        "name": "refresh",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handler.Refresh"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.APIError"
                        }
                    }
                }
            }
        },
        "/timeslots": {
            "get": {
                "description": "Retrieves all timeslots",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Timeslots"
                ],
                "summary": "Get all timeslots",
                "responses": {
                    "200": {
                        "description": "List of timeslots",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.Timeslot"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new timeslot in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Timeslots"
                ],
                "summary": "Create a new timeslot",
                "parameters": [
                    {
                        "description": "Timeslot data",
                        "name": "timeslot",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.CreateTimeslot"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Timeslot created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/timeslots/active": {
            "get": {
                "description": "Retrieves all active timeslots",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Timeslots"
                ],
                "summary": "Get active timeslots",
                "responses": {
                    "200": {
                        "description": "List of active timeslots",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.Timeslot"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/timeslots/by-court": {
            "get": {
                "description": "Retrieves all timeslots for a specific court",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Timeslots"
                ],
                "summary": "Get timeslots by court",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Court ID",
                        "name": "court_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Weekday filter",
                        "name": "day",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of timeslots for the court",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.Timeslot"
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid court ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/timeslots/{id}": {
            "get": {
                "description": "Retrieves a single timeslot by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Timeslots"
                ],
                "summary": "Get timeslot by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Timeslot ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Timeslot data",
                        "schema": {
                            "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.Timeslot"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Timeslot not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Updates the details of an existing timeslot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Timeslots"
                ],
                "summary": "Update a timeslot",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Timeslot ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated timeslot data",
                        "name": "timeslot",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.CreateTimeslot"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Timeslot updated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a timeslot by its ID",
                "tags": [
                    "Timeslots"
                ],
                "summary": "Delete a timeslot",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Timeslot ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Timeslot deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Get a list of all users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.User"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update the details of a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "description": "Updated user data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.User"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.APIError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.CreateUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.APIError"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Get details of a user by their ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get a user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.User"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.APIError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a user by their ID",
                "tags": [
                    "users"
                ],
                "summary": "Delete a user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.APIError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_minacio00_easyCourt_internal_model.APIError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_minacio00_easyCourt_internal_model.Booking": {
            "type": "object",
            "properties": {
                "booking_date": {
                    "description": "Date of the booking",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "omitempty": {
                    "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.Timeslot"
                },
                "opponent_name": {
                    "type": "string"
                },
                "opponent_partner": {
                    "type": "string"
                },
                "partner_name": {
                    "type": "string"
                },
                "singles_flag": {
                    "type": "boolean"
                },
                "timeslot_id": {
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.User"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "github_com_minacio00_easyCourt_internal_model.Court": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "location": {
                    "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.Location"
                },
                "location_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "github_com_minacio00_easyCourt_internal_model.CreateBooking": {
            "type": "object",
            "properties": {
                "opponent_name": {
                    "type": "string"
                },
                "opponent_partner": {
                    "type": "string"
                },
                "partner_name": {
                    "type": "string"
                },
                "singles_flag": {
                    "type": "boolean"
                },
                "timeslot_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "github_com_minacio00_easyCourt_internal_model.CreateLocation": {
            "type": "object",
            "properties": {
                "location_name": {
                    "type": "string"
                }
            }
        },
        "github_com_minacio00_easyCourt_internal_model.CreateTimeslot": {
            "type": "object",
            "properties": {
                "court_id": {
                    "type": "integer"
                },
                "end_time": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "start_time": {
                    "type": "string"
                },
                "week_day": {
                    "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.Weekday"
                }
            }
        },
        "github_com_minacio00_easyCourt_internal_model.CreateUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "github_com_minacio00_easyCourt_internal_model.Location": {
            "type": "object",
            "properties": {
                "allowAppPayments": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "location_name": {
                    "type": "string"
                },
                "paymentDescription": {
                    "type": "string"
                },
                "pix": {
                    "type": "string"
                }
            }
        },
        "github_com_minacio00_easyCourt_internal_model.ReadBooking": {
            "type": "object",
            "properties": {
                "booking_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "opponent_name": {
                    "type": "string"
                },
                "opponent_partner": {
                    "type": "string"
                },
                "partner_name": {
                    "type": "string"
                },
                "singles_flag": {
                    "type": "boolean"
                },
                "timeslot": {
                    "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.ReadTimeslot"
                },
                "timeslot_id": {
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.User"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "github_com_minacio00_easyCourt_internal_model.ReadTimeslot": {
            "type": "object",
            "properties": {
                "booking": {
                    "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.ReadBooking"
                },
                "court": {
                    "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.Court"
                },
                "court_id": {
                    "type": "integer"
                },
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "start_time": {
                    "type": "string"
                },
                "week_day": {
                    "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.Weekday"
                }
            }
        },
        "github_com_minacio00_easyCourt_internal_model.Timeslot": {
            "type": "object",
            "properties": {
                "booking": {
                    "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.Booking"
                },
                "court": {
                    "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.Court"
                },
                "court_id": {
                    "type": "integer"
                },
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "start_time": {
                    "type": "string"
                },
                "week_day": {
                    "$ref": "#/definitions/github_com_minacio00_easyCourt_internal_model.Weekday"
                }
            }
        },
        "github_com_minacio00_easyCourt_internal_model.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "lastName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "github_com_minacio00_easyCourt_internal_model.Weekday": {
            "type": "string",
            "enum": [
                "Domingo",
                "Segunda-feira",
                "Terça-feira",
                "Quarta-feira",
                "Quinta-feira",
                "Sexta-feira",
                "Sábado"
            ],
            "x-enum-varnames": [
                "Domingo",
                "SegundaFeira",
                "TercaFeira",
                "QuartaFeira",
                "QuintaFeira",
                "SextaFeira",
                "Sabado"
            ]
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "internal_handler.Credentials": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "internal_handler.Refresh": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        }
    }
}